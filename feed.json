{
  "version": "https://jsonfeed.org/version/1",
  "title": "PSWU",
  "home_page_url": "https://pswu.dev",
  "feed_url": "https://pswu.devfeed.json",
  "description": "A minimal hugo theme focus on content",
  "favicon": "https://pswu.dev/assets/favicon.ico",
  "expired": false,
  "author": {
    "name": "Calvin Tran",
    "url": "https://pswu.dev"
  },
  "items": [
    
    

    
    {
      "id": "355d61521870179ce8675d8423b1c5a05338dc40",
      "title": "Learning notes: staking on Ethereum",
      "summary": "",
      "content_text": "Note: This post doesn\u0026rsquo;t intend to be investment advice, so I intentionally avoid mentioning specific staking providers. If you find any information unclear/incorrect, feel free to let me know.\nWe talked about staking during the recent SheFi session. And I noticed it is among the most confusing topics for many others, including myself. It\u0026rsquo;s not hard to grasp the concept of why staking is necessary for security and decentralization, and why it might be an interesting way to invest. But with all the staking options out there, what are the differences? While learning about this, I created a mental map to clarify my thoughts. I\u0026rsquo;d like to share this mental map and my train of thought in this blog post, and hopefully it\u0026rsquo;s helpful for others who are also learning the same topic.\nI use a tree graph to highlight relevant traits and requirements of different staking options from the perspective of stakers:\nTo add more context to the tree graph above, I also put together a list of (non-exhaustive) questions a potential staker could ask when evaluating different staking providers (especially staking pools) and why these questions matter.\nCan I stake using a non-custodial wallet? This is the key to determining whether you have full ownership of your staking rewards. You might have heard people saying - staking pools are decentralized, so your rewards are safe. Be careful not to take it too literally because it\u0026rsquo;s based on many assumptions1. If you participate in staking pools using a custodial exchange, the tokens technically go to your custodial wallet. So you don\u0026rsquo;t truly own them until you transfer them back to your non-custodial wallet.\nIs the staking process based on a smart contract? It\u0026rsquo;s worth noticing that not all staking pools are based on smart contracts. Therefore, not all of them are decentralized. It\u0026rsquo;s more ideal when smart contracts own2 the whole staking process, not the node operators or the service providers. Also, there should be a built-in incentivization mechanism to prevent malicious node operators. That said, not all smart contracts are secure, so you should ask more questions.\nHas the smart contract (or even other parts of the system) been audited? If so, has the team published the audit reports? There are many staking pools out there that are based on smart contracts. But we know that smart contracts are written by humans, and humans make mistakes. It\u0026rsquo;s important to observe whether the developers behind the project have done their best to secure the system and resolve the vulnerabilities found. One indicator would be whether they have sought smart contract auditors to audit their code AND whether they have published the reports with follow-up actions.\nWho controls the withdrawal key? If you are more technical, you might even want to understand who controls the withdrawal credentials. For example, some staking pools make node operators delegate their withdrawal keys to a smart contract, which points to the staking pools. This prevents the node operators from withdrawing staked ETH or excessive rewards. To learn more about the withdrawal key, you could refer to the Ethereum documentation.\nWhat is the liquidity of staking pools? In normal staking, your staked ETH becomes illiquidable. But in liquid staking, a type of staking pool, you receive ERC-20 tokens that represent your staking rewards. You could then reinvest these tokens or use them as collateral. The liquidity doesn\u0026rsquo;t only depend on whether the token is ERC-20 (fungible); it\u0026rsquo;s also relevant to check whether you could resell your tokens back to the platform, the trading volumes of this token, and what the ratio vs. ETH is, etc., depending on your own investment preference.\nIs the project open-source? A common misconception is that being open-source only means publishing the code. Indeed, code transparency is one of the benefits of being open source. However, being open source also means the project welcomes community feedback, issues, and contributions. It\u0026rsquo;s important to note that open source is not proof of secure code or trustworthiness, even though an active open source community is often seen as a positive signal.\nDo you have any feedback? Let me know if you feel any key information needs to be included to help more people understand this topic!\nIn some occassions, stakings pools is used interchangeably with smart-contract based liquid staking, and it\u0026rsquo;s assumed that users interact with the platform using a non-custodial wallet.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nNote that smart contracts could also have some owner addresses with unreasonable privileges that compromise security.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n",
      "content_html": "\u003cp\u003e\u003cem\u003eNote: This post doesn\u0026rsquo;t intend to be investment advice, so I intentionally\navoid mentioning specific staking providers. If you find any information\nunclear/incorrect, feel free to let me know.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eWe talked about staking during the recent \u003ca href=\"https://www.shefi.org/\"\u003eSheFi\u003c/a\u003e\nsession. And I noticed it is among the most confusing topics for many others,\nincluding myself. It\u0026rsquo;s not hard to grasp the concept of why staking is necessary\nfor security and decentralization, and why it might be an interesting way to\ninvest. But with all the staking options out there, what are the differences?\nWhile learning about this, I created a mental map to clarify my thoughts. I\u0026rsquo;d\nlike to share this mental map and my train of thought in this blog post, and\nhopefully it\u0026rsquo;s helpful for others who are also learning the same topic.\u003c/p\u003e\n\u003cp\u003eI use a tree graph to highlight relevant traits and requirements of different\nstaking options from the perspective of stakers:\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/mental-map-staking.png\"\n  alt=\"mental mapstaking for staking on eth2\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eTo add more context to the tree graph above, I also put together a list of\n(non-exhaustive) questions a potential staker could ask when evaluating\ndifferent staking providers (especially staking pools) and why these questions\nmatter.\u003c/p\u003e\n\u003ch4 id=\"can-i-stake-using-a-non-custodial-wallet\"\u003eCan I stake using a non-custodial wallet?\u003c/h4\u003e\n\u003cp\u003eThis is the key to determining whether you have full ownership of your staking\nrewards. You might have heard people saying - staking pools are decentralized,\nso your rewards are safe. Be careful not to take it too literally because it\u0026rsquo;s\nbased on many assumptions\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. If you participate in staking pools using a\ncustodial exchange, the tokens technically go to your custodial wallet. So you\ndon\u0026rsquo;t \u003cstrong\u003etruly own\u003c/strong\u003e them until you transfer them back to your non-custodial\nwallet.\u003c/p\u003e\n\u003ch4 id=\"is-the-staking-process-based-on-a-smart-contract\"\u003eIs the staking process based on a smart contract?\u003c/h4\u003e\n\u003cp\u003eIt\u0026rsquo;s worth noticing that \u003cstrong\u003enot all staking pools are based on smart contracts\u003c/strong\u003e.\nTherefore, not all of them are decentralized. It\u0026rsquo;s more ideal when smart\ncontracts own\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e the whole staking process, not the node operators or the\nservice providers. Also, there should be a built-in incentivization mechanism to\nprevent malicious node operators. That said, not all smart contracts are secure,\nso you should ask more questions.\u003c/p\u003e\n\u003ch4 id=\"has-the-smart-contract-or-even-other-parts-of-the-system-been-audited-if-so-has-the-team-published-the-audit-reports\"\u003eHas the smart contract (or even other parts of the system) been audited? If so, has the team published the audit reports?\u003c/h4\u003e\n\u003cp\u003eThere are many staking pools out there that are based on smart contracts. But we\nknow that smart contracts are written by humans, and humans make mistakes. It\u0026rsquo;s\nimportant to observe whether the developers behind the project have done their\nbest to secure the system and resolve the vulnerabilities found. One indicator\nwould be whether they have sought smart contract auditors to audit their code\n\u003cstrong\u003eAND\u003c/strong\u003e whether they have published the reports with follow-up actions.\u003c/p\u003e\n\u003ch4 id=\"who-controls-the-withdrawal-key\"\u003eWho controls the withdrawal key?\u003c/h4\u003e\n\u003cp\u003eIf you are more technical, you might even want to understand who controls the\nwithdrawal credentials. For example, some staking pools make node operators\ndelegate their withdrawal keys to a smart contract, which points to the staking\npools. \u003cstrong\u003eThis prevents the node operators from withdrawing staked ETH or\nexcessive rewards.\u003c/strong\u003e To learn more about the withdrawal key, you could refer to\nthe\n\u003ca href=\"https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/keys/\"\u003eEthereum documentation\u003c/a\u003e.\u003c/p\u003e\n\u003ch4 id=\"what-is-the-liquidity-of-staking-pools\"\u003eWhat is the liquidity of staking pools?\u003c/h4\u003e\n\u003cp\u003eIn normal staking, your staked ETH becomes illiquidable. But in liquid staking,\na type of staking pool, you receive ERC-20 tokens that represent your staking\nrewards. You could then reinvest these tokens or use them as collateral. The\nliquidity doesn\u0026rsquo;t only depend on whether the token is ERC-20 (fungible); it\u0026rsquo;s\nalso relevant to check whether you could resell your tokens back to the\nplatform, the trading volumes of this token, and what the ratio vs. ETH is,\netc., \u003cstrong\u003edepending on your own investment preference\u003c/strong\u003e.\u003c/p\u003e\n\u003ch4 id=\"is-the-project-open-source\"\u003eIs the project open-source?\u003c/h4\u003e\n\u003cp\u003eA common misconception is that being open-source only means publishing the code.\nIndeed, code transparency is one of the benefits of being open source. However,\nbeing open source also means the project welcomes community feedback, issues,\nand contributions. It\u0026rsquo;s important to note that \u003cstrong\u003eopen source is not proof of\nsecure code or trustworthiness\u003c/strong\u003e, even though an active open source community is\noften seen as a positive signal.\u003c/p\u003e\n\u003cp\u003eDo you have any feedback? Let me know if you feel any key information needs to\nbe included to help more people understand this topic!\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eIn some occassions, \u003cstrong\u003estakings pools\u003c/strong\u003e is used interchangeably with\n\u003cstrong\u003esmart-contract based liquid staking\u003c/strong\u003e, and it\u0026rsquo;s assumed that users\ninteract with the platform using a non-custodial wallet.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eNote that smart contracts could also have some owner addresses with\nunreasonable privileges that compromise security.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n",
      "url": "https://pswu.dev/posts/staking-on-eth-1/",
      "date_published": "7056-07-09T50:77:00+00:00",
      "date_modified": "7056-07-09T50:77:00+00:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://pswu.dev"
      }
    },
    
    {
      "id": "8eb91192cc6d1fd57d40774ded338ddac2591720",
      "title": "Building a Minimalist Website with Hugo in a Day",
      "summary": "",
      "content_text": " How much time do you need to build a personal website with a blog module?\nI\u0026rsquo;ve been having this idea in mind for several weeks - building my personal website. But having another full-time job, you get to plan your time well before you kick-off a side project. Otherwise, you might feel like you would never see the end of it.\nSo the question is how you want to do it? From completely drag \u0026amp; drop solutions to hand-crafting the HTML pages line by line, you will have to pick a way.\nAfter some research, I concluded my expectation as below:\nNo drag \u0026amp; drop Publish \u0026amp; host on GitHub Pages Blogging module From A to Z within a week Low technical entry barrier Further areas of development and customization Among so many available tools, I eventually decided for Hugo after checking its documentation. You literally don\u0026rsquo;t need to \u0026ldquo;program\u0026rdquo; anything.\nLet\u0026rsquo;s get to the point What do we need?\nA GitHub account Git installed and configured A little bit of Markdown experience: take fives minutes to read the instruction A little bit of command line knowledge: you know where your terminal is, and can copy\u0026amp;paste Patience, love \u0026amp; motivation :3 Create Git repositories In this introduction, we will be hosting our personal website using GitHub Pages.\nOverall, we will create two repositories under your GitHub account:\n1. \u0026lt;SITE_NAME\u0026gt;\n2. \u0026lt;GITHUB_USERNAME\u0026gt;.github.io\nThe repository \u0026lt;HUGO_SITE_NAME\u0026gt; is used to save the original Hugo project, which is the place where you edit the articles, configure your pages, and tune your themes.\nAnd \u0026lt;GITHUB_USERNAME\u0026gt;.github.io is for the generated HTML content that will be rendered by Hugo. It will also be a submodule of the first repository in our setup.\nOne important thing to notice here is that we need to create the second repository with this specific name above for hosting via Github Pages.\nSetup Hugo After you have installed Hugo successfully. Go to where you would like to put your Hugo project and generate a Hugo project:\ncd \u0026lt;YOUR WISHED LOCATION/FOLDER\u0026gt;\nhugo new site \u0026lt;HUGO_SITE_NAME\u0026gt;\nAfter you have create your Hugo project, Hugo will generate a structure which looks like below:\nBut for now, we will only work with below items:\nconfig.toml: the configuration file for your personal website themes: where you could use existing themes or customize your own here static: the default path for any images you want to put into your blog posts content: where your about me and blog pages are located Add a theme After the overall structure is created, now we need to pick a theme that suits your imagined site the most.\nVisit Hugo Themes and find one you like.\nIn this tutorial, we use meme theme.\nMake sure you are in your project folder:\ngit init\ngit submodule add https://github.com/calintat/minimal.git themes/meme\ncp themes/meme/exampleSite/config.toml .\nUntil now, we are almost done, but we need to do a bit of configuration.\nOpen your config.toml, which is the one you just copied from the meme theme.\nMake sure below parts are modified correctly:\n… baseURL = \u0026#34;https://\u0026lt;GITHUB_USERNAME\u0026gt;.github.io/\u0026#34; … theme = \u0026#34;meme\u0026#34; … publishDir = \u0026#34;\u0026lt;GITHUB_USERNAME\u0026gt;.github.io\u0026#34; … Save it. Now we will host this website on your local machine and see if it runs smoothly as we imagine.\nRun this in the terminal:\nhugo server\nNow Hugo has generated your static website and make it available on your machine locally.\nGo check out http://localhost:1313/ in your browser, you should be able to see your personal website in the theme you picked earlier.\nCongratulations!\nHost your website using GitHub Pages So, \u0026ldquo;yay\u0026rdquo; you say, \u0026ldquo;but what now?\u0026rdquo;\nNow, we need to make sure it also works on GitHub Pages.\nIf you remember we have created two repositories, it\u0026rsquo;s time to connect to them. First, make sure you are still in the project folder.\ngit init\ngit remote add origin git@github.com:\u0026lt;GITHUB_USERNAME\u0026gt;/\u0026lt;SITE_NAME\u0026gt;.git\ngit add .\ngit commit -m \u0026quot;first commit for my hugo website.\u0026quot;\nThen we add submodule, which will be the folder for our generated HTML:\ngit submodule add git@github.com:\u0026lt;GITHUB_USERNAME\u0026gt;/\u0026lt;GITHUB_USERNAME\u0026gt;.github.io.git\nFinally, we have added our origins to git repositories. And we need to rendered our static website and push it to our second GitHub repository.\nhugo\nThis command will generate your website content to the submodule folder we just created:\nNow we move to the submodule folder with the name of \u0026lt;GITHUB_USERNAME\u0026gt;.github.io.\ncd \u0026lt;GITHUB_USERNAME\u0026gt;.github.io\ngit add .\ngit commit -m \u0026quot;first commit for my generated HTML content.\u0026quot;\ngit push origin master\nYour website is now available at https://\u0026lt;GITHUB_USERNAME\u0026gt;.github.io this address.\nCheck it out in your browser!\nMine looks like this: pswu11.github.io\nFinal step: customization and content Wait, it\u0026rsquo;s still not finished.\nWe need to make this website look like YOUR personal website.\nWhat should you do?\nGo trough config.toml and configure your website the way you want Create content such as About Me or blog posts using Markdown format (.md) After that, repeat the steps to push your changes to GitHub repositories, for your Hugo project as well as for your submodule.\nFeel free to leave your comments if you have any questions!\nNote: This article is also published on Medium (Link).\n",
      "content_html": "\u003cp\u003e\u003cimg\n  src=\"/images/hugosite1.png\"\n  alt=\"Hugo\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eHow much time do you need to build a personal website with a blog module?\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ve been having this idea in mind for several weeks - building my personal\nwebsite. But having another full-time job, you get to plan your time well before\nyou kick-off a side project. Otherwise, you might feel like you would never see\nthe end of it.\u003c/p\u003e\n\u003cp\u003eSo the question is how you want to do it? From completely drag \u0026amp; drop solutions\nto hand-crafting the HTML pages line by line, you will have to pick a way.\u003c/p\u003e\n\u003cp\u003eAfter some research, I concluded my expectation as below:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eNo drag \u0026amp; drop\u003c/li\u003e\n\u003cli\u003ePublish \u0026amp; host on GitHub Pages\u003c/li\u003e\n\u003cli\u003eBlogging module\u003c/li\u003e\n\u003cli\u003eFrom A to Z within a week\u003c/li\u003e\n\u003cli\u003eLow technical entry barrier\u003c/li\u003e\n\u003cli\u003eFurther areas of development and customization\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAmong so many available tools, I eventually decided for Hugo after checking its\ndocumentation. You literally don\u0026rsquo;t need to \u0026ldquo;program\u0026rdquo; anything.\u003c/p\u003e\n\u003ch3 id=\"lets-get-to-the-point\"\u003eLet\u0026rsquo;s get to the point\u003c/h3\u003e\n\u003cp\u003eWhat do we need?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA GitHub account\u003c/li\u003e\n\u003cli\u003eGit installed and configured\u003c/li\u003e\n\u003cli\u003eA little bit of Markdown experience: take fives minutes to read the\ninstruction\u003c/li\u003e\n\u003cli\u003eA little bit of command line knowledge: you know where your terminal is, and\ncan copy\u0026amp;paste\u003c/li\u003e\n\u003cli\u003ePatience, love \u0026amp; motivation :3\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"create-git-repositories\"\u003eCreate Git repositories\u003c/h3\u003e\n\u003cp\u003eIn this introduction, we will be hosting our personal website using GitHub\nPages.\u003c/p\u003e\n\u003cp\u003eOverall, we will create two repositories under your GitHub account:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1. \u0026lt;SITE_NAME\u0026gt;\u003c/strong\u003e\u003cbr\u003e \u003cstrong\u003e2. \u0026lt;GITHUB_USERNAME\u0026gt;.github.io\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/hugosite2.png\"\n  alt=\"My repositories\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eThe repository \u003cstrong\u003e\u0026lt;HUGO_SITE_NAME\u0026gt;\u003c/strong\u003e is used to save the original Hugo project,\nwhich is the place where you edit the articles, configure your pages, and tune\nyour themes.\u003c/p\u003e\n\u003cp\u003eAnd \u003cstrong\u003e\u0026lt;GITHUB_USERNAME\u0026gt;.github.io\u003c/strong\u003e is for the generated HTML content that will\nbe rendered by Hugo. It will also be a submodule of the first repository in our\nsetup.\u003c/p\u003e\n\u003cp\u003eOne important thing to notice here is that we need to create the second\nrepository with this specific name above for hosting via Github Pages.\u003c/p\u003e\n\u003ch3 id=\"setup-hugo\"\u003eSetup Hugo\u003c/h3\u003e\n\u003cp\u003eAfter you have installed Hugo successfully. Go to where you would like to put\nyour Hugo project and generate a Hugo project:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecd \u0026lt;YOUR WISHED LOCATION/FOLDER\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehugo new site \u0026lt;HUGO_SITE_NAME\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eAfter you have create your Hugo project, Hugo will generate a structure which\nlooks like below:\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/hugosite3.png\"\n  alt=\"Hugo Structure\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eBut for now, we will only work with below items:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003econfig.toml: the configuration file for your personal website\u003c/li\u003e\n\u003cli\u003ethemes: where you could use existing themes or customize your own here\u003c/li\u003e\n\u003cli\u003estatic: the default path for any images you want to put into your blog posts\u003c/li\u003e\n\u003cli\u003econtent: where your about me and blog pages are located\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"add-a-theme\"\u003eAdd a theme\u003c/h3\u003e\n\u003cp\u003eAfter the overall structure is created, now we need to pick a theme that suits\nyour imagined site the most.\u003c/p\u003e\n\u003cp\u003eVisit \u003ca href=\"https://themes.gohugo.io/\"\u003eHugo Themes\u003c/a\u003e and find one you like.\u003c/p\u003e\n\u003cp\u003eIn this tutorial, we use meme theme.\u003c/p\u003e\n\u003cp\u003eMake sure you are in your project folder:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit init\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit submodule add https://github.com/calintat/minimal.git themes/meme\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecp themes/meme/exampleSite/config.toml .\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eUntil now, we are almost done, but we need to do a bit of configuration.\u003c/p\u003e\n\u003cp\u003eOpen your \u003ccode\u003econfig.toml\u003c/code\u003e, which is the one you just copied from the meme theme.\u003c/p\u003e\n\u003cp\u003eMake sure below parts are modified correctly:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e…\nbaseURL = \u0026#34;https://\u0026lt;GITHUB_USERNAME\u0026gt;.github.io/\u0026#34;\n…\ntheme = \u0026#34;meme\u0026#34;\n…\npublishDir = \u0026#34;\u0026lt;GITHUB_USERNAME\u0026gt;.github.io\u0026#34;\n…\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSave it. Now we will host this website on your local machine and see if it runs\nsmoothly as we imagine.\u003c/p\u003e\n\u003cp\u003eRun this in the terminal:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehugo server\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/hugosite4.png\"\n  alt=\"Hosting on your machine\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eNow Hugo has generated your static website and make it available on your machine\nlocally.\u003c/p\u003e\n\u003cp\u003eGo check out \u003ca href=\"http://localhost:1313/\"\u003ehttp://localhost:1313/\u003c/a\u003e in your browser,\nyou should be able to see your personal website in the theme you picked earlier.\u003c/p\u003e\n\u003cp\u003eCongratulations!\u003c/p\u003e\n\u003ch3 id=\"host-your-website-using-github-pages\"\u003eHost your website using GitHub Pages\u003c/h3\u003e\n\u003cp\u003eSo, \u0026ldquo;yay\u0026rdquo; you say, \u0026ldquo;but what now?\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eNow, we need to make sure it also works on GitHub Pages.\u003c/p\u003e\n\u003cp\u003eIf you remember we have created two repositories, it\u0026rsquo;s time to connect to them.\nFirst, make sure you are still in the project folder.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit init\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit remote add origin git@github.com:\u0026lt;GITHUB_USERNAME\u0026gt;/\u0026lt;SITE_NAME\u0026gt;.git\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit add .\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit commit -m \u0026quot;first commit for my hugo website.\u0026quot;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThen we add submodule, which will be the folder for our generated HTML:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit submodule add git@github.com:\u0026lt;GITHUB_USERNAME\u0026gt;/\u0026lt;GITHUB_USERNAME\u0026gt;.github.io.git\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eFinally, we have added our origins to git repositories. And we need to rendered\nour static website and push it to our second GitHub repository.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehugo\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThis command will generate your website content to the submodule folder we just\ncreated:\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/hugosite5.png\"\n  alt=\"Your site is generated\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eNow we move to the submodule folder with the name of\n\u003cstrong\u003e\u0026lt;GITHUB_USERNAME\u0026gt;.github.io\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecd \u0026lt;GITHUB_USERNAME\u0026gt;.github.io\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit add .\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit commit -m \u0026quot;first commit for my generated HTML content.\u0026quot;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit push origin master\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eYour website is now available at https://\u0026lt;GITHUB_USERNAME\u0026gt;.github.io this\naddress.\u003c/p\u003e\n\u003cp\u003eCheck it out in your browser!\u003c/p\u003e\n\u003cp\u003eMine looks like this: \u003ca href=\"https://pswu11.github.io/\"\u003epswu11.github.io\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"final-step-customization-andcontent\"\u003eFinal step: customization and content\u003c/h3\u003e\n\u003cp\u003eWait, it\u0026rsquo;s still not finished.\u003c/p\u003e\n\u003cp\u003eWe need to make this website look like YOUR personal website.\u003c/p\u003e\n\u003cp\u003eWhat should you do?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGo trough config.toml and configure your website the way you want\u003c/li\u003e\n\u003cli\u003eCreate content such as About Me or blog posts using Markdown format (.md)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAfter that, repeat the steps to push your changes to GitHub repositories, for\nyour Hugo project as well as for your submodule.\u003c/p\u003e\n\u003cp\u003eFeel free to leave your comments if you have any questions!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This article is also published on Medium\n\u003ca href=\"https://medium.com/@pswoo/building-a-minimalist-website-with-hugo-in-a-day-ac19df8ecc52\"\u003e(Link)\u003c/a\u003e.\u003c/p\u003e\n",
      "url": "https://pswu.dev/posts/hugosite/",
      "date_published": "5126-05-09T120:55:00+00:00",
      "date_modified": "5126-05-09T120:55:00+00:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://pswu.dev"
      }
    },
    
    {
      "id": "bc9b1026ac75d321bf962da2c4a0f436e12d4536",
      "title": "Linux Newbie: Running Manjaro on MacBookPro",
      "summary": "",
      "content_text": "The article explains how to install and set up Manjaro KDE on your Apple MacBook Pro (Early 2015) Retina 13\u0026quot;. If you are a Linux newbie and want to try Manjaro too, this guide is for you!\nInstallation First of all, it’s recommended to use the stable version from Manjaro. You can download the image file at its official website, and can create a bootable USB stick from that. If you never did this before, there is a step by step guide here on the website. It is pretty understandable.\nAfter you create the bootable USB and connect it to your laptop, restart your computer. For MacBook user, please long press the key option after reboot and choose to boot from the USB stick.\nNow, you will be able to have a first impression of your future OS.\nThe whole installation process is pretty easy and smooth if you follow the installation guide.\nBasic Setup So now you have an out-of-the-box desktop environment. But there are some basic adjustments you have to do before you start to customise other parts.\nUpdate your system to the latest version. The Manjaro distro is based on Arch Linux.\nFor Arch Linux based distros, pacman is the package manager that is used for installing, updating, removing your packages.\nSo, open the terminal and run this to update your system.\nsudo pacman -Syyu\nThen we are good to go to our next steps.\nAllow AUR as packages source. There are several repositories for Arch based Linux users when you want to install new applications (or let’s say packages). As mentioned, pacman is usually used for installing packages that are offered by Manjaro maintenance team, the community. However, there are several common applications for which you will need to install from AUR (Arch User Repository).\nFirst, please install pamac, another GUI for the existing package manager. The original one is Octopi.\nThrough pamac you can enable AUR as package repository.\nsudo pacman -S pamac\nRun pamac. Search for the application with name Add/Remove Software, and you will find it.\nGo to Settings (the buttom at upper right) \u0026gt; Preferences \u0026gt; AUR. Here you can enable AUR support and check the box for getting updates from AUR.\nLater we will need to install some packages from AUR through pamac.\nInstall and configure the MBP fan driver. You probably notice that the fan is not working probably. Here is how we can make the fan work on your MacBook Pro again.\nFirst, there are some modules to be created for the fan speed and the temperature sensors:\nsudo nano /etc/modules\nInsert these two lines to add the modules.\ncoretemp\napplesmc\nSave it.\nThen we need to install mbpfan-git through our pamac.\nAfter that, make the sensors detectable.\nsudo sensors-detect\nStart the fan.\nsudo systemctl enable mbpfan\nsudo systemctl start mbpfan\nIt is recommended to also configure the fan speed etc. with your own working preference.\nsudo nano /etc/mbpfan.conf\nMy configuration file looks like this:\nmin_fan1_speed = 1300 max_fan1_speed = 6100 low_temp = 60 high_temp = 64 max_temp = 80 polling_interval = 3 However, you could also refer to a more detailed tutorial here at ineed.coffee.\nAdjusting the display and scaling factors. If you have a MacBook Pro Retina or other laptops with high resolution display, you probably notice that all the texts and icons are extremely small. In this case it’s recommended to change the scaling factor here (for Manjaro KDE):\nSystem Settings \u0026gt; Display and Monitor \u0026gt; Displays \u0026gt; Scale Display\nTake my own setting as an example — my display resolution is 2560x1440, and with that I use 1.4 as the scaling factor.\nFixing the suspend issue. When I first time installed Manjaro, I noticed that sometimes the laptop woke up while the lid was closed. Later on, I realized it is one of the common issues when running Linux on MacBooks — the suspend doesn’t work properly.\nI found a solution in Phil Plückthun’s article.\nOpen the terminal and type this:\nsudo nano /etc/systemd/logind.conf\nThen, add these two lines below in the configuration and save it.\nHandlePowerKey=suspend HandleLidSwitch=suspend\nMake your front camera work (optional). You will have to install a specific driver in order to use the front camera on your MacBook Pro. The package name is called facetimehd.\nThe gitpage page can be found here and there is an intruction.\nI ecountered some problems here, so make sure you also check the additional notes in the instruction. That could help.\nNow it’s almost done. Do customization. Now it’s time to customize your desktop the way you want!\nGet your favourite applications. Linux newbie or not, as mentioned before, there are several sources of packages. When you are not sure where to find your favourite applications, you can search keywords at ArchWiki. There you will usually find possible choices to get the exact application you want, or alternatives.\nAlso, if you encounter any problems while configurating your new desktop, you could join Manjaro telegram group or look for solutions at Manjaro’s offical forum.\nThis is my first time installing and configuring Linux. Through this article, I record my journey of learning about Manjaro.\nI am glad that I can share my takeaways with people who are also new but interested in trying out!\nI hope you enjoy using your new Manjaro KDE! 💜 Note: This article is also published on Medium (Link)\n",
      "content_html": "\u003cp\u003e\u003cem\u003eThe article explains how to install and set up Manjaro KDE on your Apple MacBook Pro (Early 2015) Retina 13\u0026quot;. If you are a Linux newbie and want to try Manjaro too, this guide is for you!\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/manjaro1.jpeg\"\n  alt=\"my first manjaro desktop\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003ch3 id=\"installation\"\u003eInstallation\u003c/h3\u003e\n\u003cp\u003eFirst of all, it’s recommended to use the \u003cstrong\u003estable version\u003c/strong\u003e from Manjaro. You can download the image file at its official website, and can create a bootable USB stick from that. If you never did this before, there is a step by step guide \u003ca href=\"https://manjaro.org/support/firststeps/#making-a-live-system\"\u003ehere\u003c/a\u003e on the website. It is pretty understandable.\u003c/p\u003e\n\u003cp\u003eAfter you create the bootable USB and connect it to your laptop, restart your computer. For MacBook user, please long press the key option after reboot and choose to boot from the USB stick.\u003c/p\u003e\n\u003cp\u003eNow, you will be able to have a first impression of your future OS.\u003c/p\u003e\n\u003cp\u003eThe whole installation process is pretty easy and smooth if you follow the installation guide.\u003c/p\u003e\n\u003ch3 id=\"basic-setup\"\u003eBasic Setup\u003c/h3\u003e\n\u003cp\u003eSo now you have an out-of-the-box desktop environment. But there are some basic adjustments you have to do before you start to customise other parts.\u003c/p\u003e\n\u003ch4 id=\"update-your-system-to-the-latest-version\"\u003eUpdate your system to the latest version.\u003c/h4\u003e\n\u003cp\u003eThe Manjaro distro is based on Arch Linux.\u003c/p\u003e\n\u003cp\u003eFor Arch Linux based distros, pacman is the package manager that is used for installing, updating, removing your packages.\u003c/p\u003e\n\u003cp\u003eSo, open the terminal and run this to update your system.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo pacman -Syyu\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThen we are good to go to our next steps.\u003c/p\u003e\n\u003ch4 id=\"allow-aur-as-packages-source\"\u003eAllow AUR as packages source.\u003c/h4\u003e\n\u003cp\u003eThere are several repositories for Arch based Linux users when you want to install new applications (or let’s say packages). As mentioned, pacman is usually used for installing packages that are offered by Manjaro maintenance team, the community. However, there are several common applications for which you will need to install from \u003ca href=\"https://wiki.archlinux.org/index.php/Arch_User_Repository\"\u003eAUR (Arch User Repository)\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFirst, please install pamac, another GUI for the existing package manager. The original one is Octopi.\u003c/p\u003e\n\u003cp\u003eThrough pamac you can enable AUR as package repository.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo pacman -S pamac\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eRun pamac. Search for the application with name Add/Remove Software, and you will find it.\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/manjaro2.png\"\n  alt=\"pacmac manager\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eGo to \u003cem\u003eSettings (the buttom at upper right) \u0026gt; Preferences \u0026gt; AUR\u003c/em\u003e. Here you can enable AUR support and check the box for getting updates from AUR.\u003c/p\u003e\n\u003cp\u003eLater we will need to install some packages from AUR through pamac.\u003c/p\u003e\n\u003ch4 id=\"install-and-configure-the-mbp-fan-driver\"\u003eInstall and configure the MBP fan driver.\u003c/h4\u003e\n\u003cp\u003eYou probably notice that the fan is not working probably. Here is how we can make the fan work on your MacBook Pro again.\u003c/p\u003e\n\u003cp\u003eFirst, there are some modules to be created for the fan speed and the temperature sensors:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo nano /etc/modules\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eInsert these two lines to add the modules.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecoretemp\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eapplesmc\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eSave it.\u003c/p\u003e\n\u003cp\u003eThen we need to install mbpfan-git through our pamac.\u003c/p\u003e\n\u003cp\u003eAfter that, make the sensors detectable.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo sensors-detect\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eStart the fan.\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo systemctl enable mbpfan\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo systemctl start mbpfan\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eIt is recommended to also configure the fan speed etc. with your own working preference.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo nano /etc/mbpfan.conf\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eMy configuration file looks like this:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emin_fan1_speed = 1300\nmax_fan1_speed = 6100\nlow_temp = 60        \nhigh_temp = 64       \nmax_temp = 80        \npolling_interval = 3 \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHowever, you could also refer to a more detailed tutorial here at \u003ca href=\"https://ineed.coffee/3838/a-beginners-tutorial-for-mbpfan-under-ubuntu/\"\u003eineed.coffee\u003c/a\u003e.\u003c/p\u003e\n\u003ch4 id=\"adjusting-the-display-and-scaling-factors\"\u003eAdjusting the display and scaling factors.\u003c/h4\u003e\n\u003cp\u003eIf you have a MacBook Pro Retina or other laptops with high resolution display, you probably notice that all the texts and icons are extremely small. In this case it’s recommended to change the scaling factor here (for Manjaro KDE):\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eSystem Settings \u0026gt; Display and Monitor \u0026gt; Displays \u0026gt; Scale Display\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTake my own setting as an example — my display resolution is 2560x1440, and with that I use 1.4 as the scaling factor.\u003c/p\u003e\n\u003ch4 id=\"fixing-the-suspend-issue\"\u003eFixing the suspend issue.\u003c/h4\u003e\n\u003cp\u003eWhen I first time installed Manjaro, I noticed that sometimes the laptop woke up while the lid was closed. Later on, I realized it is one of the common issues when running Linux on MacBooks — the suspend doesn’t work properly.\u003c/p\u003e\n\u003cp\u003eI found a solution in \u003ca href=\"https://medium.com/@philpl/arch-linux-running-on-my-macbook-2ea525ebefe3\"\u003ePhil Plückthun’s article\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eOpen the terminal and type this:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esudo nano /etc/systemd/logind.conf\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThen, add these two lines below in the configuration and save it.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eHandlePowerKey=suspend \u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eHandleLidSwitch=suspend\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"make-your-front-camera-work-optional\"\u003eMake your front camera work (optional).\u003c/h4\u003e\n\u003cp\u003eYou will have to install a specific driver in order to use the front camera on your MacBook Pro. The package name is called facetimehd.\u003c/p\u003e\n\u003cp\u003eThe gitpage page can be found \u003ca href=\"https://github.com/patjak/bcwc_pcie/wiki/Get-Started\"\u003ehere\u003c/a\u003e and there is an intruction.\u003c/p\u003e\n\u003cp\u003eI ecountered some problems here, so make sure you also check the additional notes in the instruction. That could help.\u003c/p\u003e\n\u003ch3 id=\"now-its-almost-done\"\u003eNow it’s almost done.\u003c/h3\u003e\n\u003ch4 id=\"do-customization\"\u003eDo customization.\u003c/h4\u003e\n\u003cp\u003eNow it’s time to customize your desktop the way you want!\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/manjaro3.png\"\n  alt=\"my another linux desktop\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003ch4 id=\"get-your-favourite-applications\"\u003eGet your favourite applications.\u003c/h4\u003e\n\u003cp\u003eLinux newbie or not, as mentioned before, there are several sources of packages. When you are not sure where to find your favourite applications, you can search keywords at \u003ca href=\"https://wiki.archlinux.org/\"\u003eArchWiki\u003c/a\u003e. There you will usually find possible choices to get the exact application you want, or alternatives.\u003c/p\u003e\n\u003cp\u003eAlso, if you encounter any problems while configurating your new desktop, you could join Manjaro telegram group or look for solutions at Manjaro’s offical \u003ca href=\"https://forum.manjaro.org/\"\u003eforum\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis is my first time installing and configuring Linux. Through this article, I record my journey of learning about Manjaro.\u003c/p\u003e\n\u003cp\u003eI am glad that I can share my takeaways with people who are also new but interested in trying out!\u003c/p\u003e\n\u003ch4 id=\"i-hope-you-enjoy-using-your-new-manjaro-kde-\"\u003eI hope you enjoy using your new Manjaro KDE! 💜\u003c/h4\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This article is also published on Medium \u003ca href=\"https://medium.com/@pswoo/linux-newbie-running-manjaro-on-macbookpro-5db4672351c9?source=friends_link\u0026amp;sk=390c7d8bbf698b4797d08f02139e5f22\"\u003e(Link)\u003c/a\u003e\u003c/p\u003e\n",
      "url": "https://pswu.dev/posts/manjaro-mbp/",
      "date_published": "4106-04-09T100:44:00+00:00",
      "date_modified": "4106-04-09T100:44:00+00:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://pswu.dev"
      }
    },
    
    {
      "id": "b9036a5cd811c6cba24496acb0985d77b3a07609",
      "title": "Ethereum乙太坊開發者大會Devcon5 獎學金計畫",
      "summary": "",
      "content_text": "我之前從沒參加過開發者大會，所以這篇文章不會著墨太多在開發者大會的內容，而是想 簡單介紹 Ethereum 開發者大會所提供的獎學金計畫（Scholars Program）。\n英文版本：Devcon5 Scholars Program — The Beginning\n是的，我要去參加 Devcon5 了！ 身為一個重度網路使用者，每天早上還沒清醒就是在床上滑個五分鐘的手機，看看天氣，看 看郵件訊息。那天早上起床，看到一封新的郵件，開頭是[Devcon 5]，腦袋頓時清醒：\n阿～我拿到參加開發者大會的全額獎學金了，這個消息讓我整整興奮了兩個星期。\n這是什麼？ 乙太坊開發者大會獎學金計畫是由乙太坊基金會所提供的。主要的宗旨是提昇區塊鏈生態圈 的多元代表性。這個獎學金計畫的對象是在學學生或是那些屬於在區塊鏈技術圈中比較弱勢 的團體（under-represented group）的人，希望提供這些人親身體驗區塊鏈技術以及參與 乙太坊開發者大會的機會。\n為什麼我要去參加？ 相信熟悉區塊鏈領域的人都聽過乙太坊（Ethereum），大概也知道乙太坊基金會（Ethereum Foundation）每年都會舉辦所謂的開發者大會。今年十月將在日本大阪舉辦第五次開發者大 會（Devcon5），預計也將吸引眾多區塊鏈生態圈的人前往參加。 2016 年春天，是我到德 國念碩士的第二個學期。在那時候有個和德國 Postbank 合作的科技創新專案，我們發表了 一個以區塊鏈技術為主的提案（Postbank ID）。\n那是我第一次接觸區塊鏈相關的知識，但由於我沒有技術背景，所以當時沒有辦法理解的很 透徹。\n2018 年在德國開始工作之後，由於在新創科技公司擔任業務開發，加上認識了真正在區塊 鏈圈工作的朋友，我才比較深入的認識各種區塊鏈的應用。在這個過程中，我似乎也開始能 理解為什麼有這麼多人願意投入他們的時間、精力、與熱情在區塊鏈技術的開發上。\n其實早在今年五月的時候，就聽朋友提起乙太坊的開發者大會。我以前一直以為這種開發者 大會就是專門給軟體開發者參加，像我這種麻瓜是沒機會的。\n可是看了幾篇介紹 Devcon3、Devcon4 的文章之後，我那先入為主的想法被改變了。\n事實上，在 Devcon 的官方網站上是這麼描述開發者大會的：\nDevcon is the Ethereum conference for developers, researchers, thinkers, and makers.\u0026quot;\n即使我並非軟體開發人員，但我對於區塊鏈技術的熱情並不亞於在這個社群裡的其他人，為 何我不該去參加呢？\n意外得的「禮物」 當然，我雖然十分想要去 Devcon，但由於票價十分昂貴，加上往返的機票與住宿，所以我 今年本來並沒有參加的計畫。一直到六月底的時候，我在推特上看到了這個訊息：\n後來的故事你們也就知道了，我因此拿到了這個進入開發者大會的門票，但這只是一個開始 。事實上，也是很多的開始。例如在這之前，我考慮過了很多能當我第一篇文章的各種主題 ，但我可沒有預料到，我發表的第一篇文章會是這篇： Devcon5 Scholars Program - The Beginning\n我想我還會繼續寫的，不管是關於 Devcon5，還是關於其他。\n其實非常的開心 — 因為在十月的開發者大會，我將會遇到很多來自世界各地的熱血人們。 如果你也打算要參加 Devcon5 且想要聊聊的話，非常歡迎與我聯繫相見！❤️\n本篇文章也同時發表在Ｍ edium 上 ：文章連結\n",
      "content_html": "\u003cp\u003e\u003cem\u003e我之前從沒參加過開發者大會，所以這篇文章不會著墨太多在開發者大會的內容，而是想\n簡單介紹 Ethereum 開發者大會所提供的獎學金計畫（Scholars Program）。\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003ca href=\"https://pswu11.github.io/2019/devconscholarship/\"\u003e英文版本：Devcon5 Scholars Program — The Beginning\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"是的我要去參加-devcon5-了\"\u003e是的，我要去參加 Devcon5 了！\u003c/h3\u003e\n\u003cp\u003e身為一個重度網路使用者，每天早上還沒清醒就是在床上滑個五分鐘的手機，看看天氣，看\n看郵件訊息。那天早上起床，看到一封新的郵件，開頭是[Devcon 5]，腦袋頓時清醒：\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/devconscholar3.png\"\n  alt=\"devcon scholar email\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003e阿～我拿到參加開發者大會的全額獎學金了，這個消息讓我整整興奮了兩個星期。\u003c/p\u003e\n\u003ch3 id=\"這是什麼\"\u003e這是什麼？\u003c/h3\u003e\n\u003cp\u003e乙太坊開發者大會獎學金計畫是由乙太坊基金會所提供的。主要的宗旨是提昇區塊鏈生態圈\n的多元代表性。這個獎學金計畫的對象是在學學生或是那些屬於在區塊鏈技術圈中比較弱勢\n的團體（under-represented group）的人，希望提供這些人親身體驗區塊鏈技術以及參與\n乙太坊開發者大會的機會。\u003c/p\u003e\n\u003ch3 id=\"為什麼我要去參加\"\u003e為什麼我要去參加？\u003c/h3\u003e\n\u003cp\u003e相信熟悉區塊鏈領域的人都聽過乙太坊（Ethereum），大概也知道乙太坊基金會（Ethereum\nFoundation）每年都會舉辦所謂的開發者大會。今年十月將在日本大阪舉辦第五次開發者大\n會（Devcon5），預計也將吸引眾多區塊鏈生態圈的人前往參加。 2016 年春天，是我到德\n國念碩士的第二個學期。在那時候有個和德國 Postbank 合作的科技創新專案，我們發表了\n一個以區塊鏈技術為主的提案（Postbank ID）。\u003c/p\u003e\n\u003cp\u003e那是我第一次接觸區塊鏈相關的知識，但由於我沒有技術背景，所以當時沒有辦法理解的很\n透徹。\u003c/p\u003e\n\u003cp\u003e2018 年在德國開始工作之後，由於在新創科技公司擔任業務開發，加上認識了真正在區塊\n鏈圈工作的朋友，我才比較深入的認識各種區塊鏈的應用。在這個過程中，我似乎也開始能\n理解為什麼有這麼多人願意投入他們的時間、精力、與熱情在區塊鏈技術的開發上。\u003c/p\u003e\n\u003cp\u003e其實早在今年五月的時候，就聽朋友提起乙太坊的開發者大會。我以前一直以為這種開發者\n大會就是專門給軟體開發者參加，像我這種麻瓜是沒機會的。\u003c/p\u003e\n\u003cp\u003e可是看了幾篇介紹 Devcon3、Devcon4 的文章之後，我那先入為主的想法被改變了。\u003c/p\u003e\n\u003cp\u003e事實上，在 Devcon 的官方網站上是這麼描述開發者大會的：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDevcon is the Ethereum conference for developers, researchers, thinkers,\nand makers.\u0026quot;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e即使我並非軟體開發人員，但我對於區塊鏈技術的熱情並不亞於在這個社群裡的其他人，為\n何我不該去參加呢？\u003c/p\u003e\n\u003ch3 id=\"意外得的禮物\"\u003e意外得的「禮物」\u003c/h3\u003e\n\u003cp\u003e當然，我雖然十分想要去 Devcon，但由於票價十分昂貴，加上往返的機票與住宿，所以我\n今年本來並沒有參加的計畫。一直到六月底的時候，我在推特上看到了這個訊息：\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/devconscholar2.png\"\n  alt=\"twitter-screenshot\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003e後來的故事你們也就知道了，我因此拿到了這個進入開發者大會的門票，但這只是一個開始\n。事實上，也是很多的開始。例如在這之前，我考慮過了很多能當我第一篇文章的各種主題\n，但我可沒有預料到，我發表的第一篇文章會是這篇：\n\u003ca href=\"https://medium.com/ethereum-foundation-devcon-scholars/ethereum-devcon5-scholars-program-i-am-accepted-a22c475a092a\"\u003eDevcon5 Scholars Program - The Beginning\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e我想我還會繼續寫的，不管是關於 Devcon5，還是關於其他。\u003c/p\u003e\n\u003cp\u003e其實非常的開心 — 因為在十月的開發者大會，我將會遇到很多來自世界各地的熱血人們。\n如果你也打算要參加 Devcon5 且想要聊聊的話，非常歡迎與我聯繫相見！❤️\u003c/p\u003e\n\u003cp\u003e本篇文章也同時發表在Ｍ edium 上\n：\u003ca href=\"https://medium.com/ethereum-foundation-devcon-scholars/ethereum%E4%B9%99%E5%A4%AA%E5%9D%8A%E9%96%8B%E7%99%BC%E8%80%85%E5%A4%A7%E6%9C%83devcon5-%E7%8D%8E%E5%AD%B8%E9%87%91%E8%A8%88%E7%95%AB-1-3824bec3e606?source=friends_link\u0026amp;sk=2a27b521c934b4e1a0185cc18d46738e\"\u003e文章連結\u003c/a\u003e\u003c/p\u003e\n",
      "url": "https://pswu.dev/posts/devconscholar-mandarin/",
      "date_published": "1086-01-09T80:11:00+00:00",
      "date_modified": "1086-01-09T80:11:00+00:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://pswu.dev"
      }
    },
    
    {
      "id": "90ed8ad28c4b70d3058d453c5c021b31896c7f5f",
      "title": "比特幣白皮書 Bitcoin White Paper — 這到底是什麼啦？",
      "summary": "",
      "content_text": "其實網路上關於比特幣和區塊鍊的文章已經很多，然而我寫此文章的目的是希望讓非資訊 技術背景的麻瓜們也能理解「比特幣白皮書」的概括重點內容並能引起興趣。文章中關於比 特幣的內容僅根據「比特幣白皮書」所描述，並且盡量不使用複雜的專有名詞，而以簡單易 懂的敘述方式取代之，如有任何建議還請不吝指教。\n背景介紹 2008 年，中本聰（Satoshi Nakamoto）在網路上發表了一篇名為「比特幣：一種點對點的 電子現金交易系統」的論文，英文原文為 Bitcoin: A Peer-to-Peer Electronic Cash System，現在也被稱為「比特幣白皮書」。其實中本聰到底是誰？雖然網路上有諸多猜測， 但目前並沒有一個確切的說法。在中本聰的論文中，他提出了一種可以實現點對點（P2P, peer-to-peer）交易的電子現金交易系統「比特幣」（Bitcoin）。換句話說，這是一種不 需要第三方金融機構作為中間人的交易系統。比特幣白皮書中所提到的實現比特幣這個交易 系統的技術，則是現在大家所知的區塊鍊技術。\n為什麼我們需要比特幣？ 在傳統的金融交易體系中，進行交易時我們都需要可信任的銀行作為第三方金融機構，以防 止金融詐騙。同樣的狀況也適用於現今的電子貨幣，由於受款人無法有效驗證付款人是否重 複支付這個電子貨幣，為了避免這種雙重支付（double spending problem）的問題，我們 即需要一個中介機構來擔任可信任的中間人。這樣的運行模式，也被稱為是一種以信任為基 礎的交易模式（trust-based model）。然而，這種依賴第三方機構的交易方式，往往需要 使用者支付中間人手續費用。在此情況下，任何金額微小的交易都將因為提高的交易成本而 受到限制。實際上，即使有可信任的中間人，也很難完全杜絕重複付款這類的金融詐騙。比 特幣即是中本聰所提出的解決方案。\n比特幣基本特性 根據白皮書，比特幣有以下的基本特性：比特幣是加密數位貨幣：使用雜湊演算法（hash） 和默克爾樹（merkle tree）方式加密可短時間內實現點對點（P2P）交易：不須透過銀行作 為中間人來驗證交易\n去中心化控制：使用分散式伺服器來確保交易系統難以被攻擊者掌控 低廉的交易成本：無中介機構處理費，實現大量小額交易 交易的不可逆性：惡意攻擊者很難竄改或是偽造貨幣紀錄 隱私保護：比特幣的結構設計能讓擁有或是交易貨幣的人保持匿名 比特幣交易系統機制 （一）公開的交易內容 數位交易中，唯一能避免同一個貨幣被雙重支付的方法是需要一次檢查所有的交易，以次判 定哪一個交易是最早發生的。在比特幣的點對點交易當中，因為沒有了可信的第三方機構來 驗證，需要其他的機制來避免重複付款以保障收款人。在比特幣的交易機制中，每一筆交易 都會被公開宣告（publicly announced），以此來判定交易的時間順序。當然，若是需要判 定時間，交易資訊上必須要有可信的時間戳記。可是，如何能保證這個時間戳記不被竄改呢 ？在比特幣的資料結構下，多筆交易（item）會形成一個區塊（block）。首先區塊會被雜 湊演算法（hash，又譯為哈西）加密處理，然後時間戳記伺服器（timestamp server）會在 此雜湊（hash）中加上時間戳記並將他公開廣播到網路上。重要的是，每一個時間戳記都包 含了上一個時間戳記在這個區塊的雜湊中，因此形成了一條鍊的結構。這樣的結構下，每當 有新的區塊包含時間戳記加入時，都加強（reinforce）了之前的區塊使他們難以被竄改 （tampering）。\n區塊的以鍊的形式呈現（參考來源：比特幣白皮書）\n（二）分散式伺服器網路 比特幣是由一個由分散式伺服器組成的網路（network）運作的，在此我們稱每一個運作單 位為節點（node）。當新的交易產生的時候，會被廣播（broadcast）到所有其他的節點上 ，而每個節點會將這些新產生所生的區塊上，並使用它的運算能力將新的區塊加入到既有的 鍊上。每個節點上都會有同樣的這一條鍊，當新的區塊被加入鍊時，會廣播到其他的節點上 。然而當任何一個節點接受到兩條不同版本的鍊，會同時保留兩條鍊，直到其中一條鍊變得 更長。對任何一個網路中的節點來說，只有最長的那條鍊會被視為正確的版本。在此情況下 ，即使有多個節點在網路中，仍能保持共識。\n（三）比特幣的發行及運作機制 前面提到了比特幣分散式伺服器的設計，在為了維持點對點交易的情況下，網路中的節點需 要使用其運算能力將新的區塊將入鍊中，這個過程被稱作為工作量證明（PoW, proof-of-work）。同時需要注意的是，比特幣的發行也是透過工作量證明來完成。要完成 這個工作量證明，節點須耗費相當的 CPU 運算能力。當這個工作被滿足後，由此產生的新 區塊將不能再被更改，除非重新運算一次。然而更多新的區塊將會被加入鍊中，因此若任何 節點意圖更改之前已存在鍊上的區塊，它則需要將此區塊並包含所有連接在它之後的區塊一 併都重新運算一次。只是，在沒有一個中央機構來控制節點的情況下，要如何讓所有節點互 相協調運作呢？這就跟比特幣的發行有關了。比特幣的發行是一種激勵機制。這個激勵機制 是能讓整個比特幣節點網路運作如常的一個很重要的環節。同時，這也是能讓比特幣能穩定 地被導入到這整個循環的機制。簡言之，當一個工作的節點貢獻了運算能力且完成了工作量 證明，節點擁有者將會得到比特幣作為獎勵。這個激勵機制還有另一層用意，當系統給予貢 獻者比特幣，這個獎勵能有效鼓勵所有網路中的節點誠實地按照既定的遊戲規則來運行。\n結語與思考 比特幣被廣泛地認為是第一個使用區塊鍊技術（blockchain technology）的實作應用，這 種應用分類被稱為加密貨幣（crypto-currencies）。從比特幣白皮書中，我們也能發現「 區塊鍊」（blockchain）這個字並未被直接的使用，但分別提到好幾次「區塊」（block） 與鍊（chain）。因此推測，在比特幣這個實例成功之後，為了將背後的技術獨立出來避免 混淆而開始普遍使用區塊鍊這個名稱。簡單地說，比特幣是一種加密貨幣，而加密貨幣是一 種區塊鍊技術的應用。但是區塊鍊並不等於加密貨幣，當然也不等於比特幣。區塊鍊技術已 經被廣泛地應用在其他層面，其中許多應用已經不僅僅是加密貨幣而已了。另外你可能也會 發現，現在的比特幣跟比特幣白皮書相比多了更多特性。原因是因為比特幣也是一個開放且 不斷創新進步的社群，很多早期被提出來的一些問題，後來都陸續有人提出解決或是強化的 方法了。因此，這也是為什麼至今比特幣仍被認為是入門區塊鍊技術最應該了解的首選實例 。\n參考資料 比特幣白皮書原文版（Satoshi Nakamoto, 2008） 比特幣白皮書中文翻譯（翻譯者：AndyLin） 比特幣白皮書中文翻譯及註解（翻譯者：金曉） 本篇文章也同時發表在Ｍ edium 上 ：文章連結。\n",
      "content_html": "\u003cp\u003e\u003cem\u003e其實網路上關於比特幣和區塊鍊的文章已經很多，然而我寫此文章的目的是希望讓非資訊\n技術背景的麻瓜們也能理解「比特幣白皮書」的概括重點內容並能引起興趣。文章中關於比\n特幣的內容僅根據「比特幣白皮書」所描述，並且盡量不使用複雜的專有名詞，而以簡單易\n懂的敘述方式取代之，如有任何建議還請不吝指教。\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"背景介紹\"\u003e背景介紹\u003c/h3\u003e\n\u003cp\u003e2008 年，中本聰（Satoshi Nakamoto）在網路上發表了一篇名為「比特幣：一種點對點的\n電子現金交易系統」的論文，英文原文為 Bitcoin: A Peer-to-Peer Electronic Cash\nSystem，現在也被稱為「比特幣白皮書」。其實中本聰到底是誰？雖然網路上有諸多猜測，\n但目前並沒有一個確切的說法。在中本聰的論文中，他提出了一種可以實現點對點（P2P,\npeer-to-peer）交易的電子現金交易系統「比特幣」（Bitcoin）。換句話說，這是一種不\n需要第三方金融機構作為中間人的交易系統。比特幣白皮書中所提到的實現比特幣這個交易\n系統的技術，則是現在大家所知的區塊鍊技術。\u003c/p\u003e\n\u003ch3 id=\"為什麼我們需要比特幣\"\u003e為什麼我們需要比特幣？\u003c/h3\u003e\n\u003cp\u003e在傳統的金融交易體系中，進行交易時我們都需要可信任的銀行作為第三方金融機構，以防\n止金融詐騙。同樣的狀況也適用於現今的電子貨幣，由於受款人無法有效驗證付款人是否重\n複支付這個電子貨幣，為了避免這種雙重支付（double spending problem）的問題，我們\n即需要一個中介機構來擔任可信任的中間人。這樣的運行模式，也被稱為是一種以信任為基\n礎的交易模式（trust-based model）。然而，這種依賴第三方機構的交易方式，往往需要\n使用者支付中間人手續費用。在此情況下，任何金額微小的交易都將因為提高的交易成本而\n受到限制。實際上，即使有可信任的中間人，也很難完全杜絕重複付款這類的金融詐騙。比\n特幣即是中本聰所提出的解決方案。\u003c/p\u003e\n\u003ch3 id=\"比特幣基本特性\"\u003e比特幣基本特性\u003c/h3\u003e\n\u003cp\u003e根據白皮書，比特幣有以下的基本特性：比特幣是加密數位貨幣：使用雜湊演算法（hash）\n和默克爾樹（merkle tree）方式加密可短時間內實現點對點（P2P）交易：不須透過銀行作\n為中間人來驗證交易\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e去中心化控制：使用分散式伺服器來確保交易系統難以被攻擊者掌控\u003c/li\u003e\n\u003cli\u003e低廉的交易成本：無中介機構處理費，實現大量小額交易\u003c/li\u003e\n\u003cli\u003e交易的不可逆性：惡意攻擊者很難竄改或是偽造貨幣紀錄\u003c/li\u003e\n\u003cli\u003e隱私保護：比特幣的結構設計能讓擁有或是交易貨幣的人保持匿名\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"比特幣交易系統機制\"\u003e比特幣交易系統機制\u003c/h4\u003e\n\u003ch5 id=\"一公開的交易內容\"\u003e（一）公開的交易內容\u003c/h5\u003e\n\u003cp\u003e數位交易中，唯一能避免同一個貨幣被雙重支付的方法是需要一次檢查所有的交易，以次判\n定哪一個交易是最早發生的。在比特幣的點對點交易當中，因為沒有了可信的第三方機構來\n驗證，需要其他的機制來避免重複付款以保障收款人。在比特幣的交易機制中，每一筆交易\n都會被公開宣告（publicly announced），以此來判定交易的時間順序。當然，若是需要判\n定時間，交易資訊上必須要有可信的時間戳記。可是，如何能保證這個時間戳記不被竄改呢\n？在比特幣的資料結構下，多筆交易（item）會形成一個區塊（block）。首先區塊會被雜\n湊演算法（hash，又譯為哈西）加密處理，然後時間戳記伺服器（timestamp server）會在\n此雜湊（hash）中加上時間戳記並將他公開廣播到網路上。重要的是，每一個時間戳記都包\n含了上一個時間戳記在這個區塊的雜湊中，因此形成了一條鍊的結構。這樣的結構下，每當\n有新的區塊包含時間戳記加入時，都加強（reinforce）了之前的區塊使他們難以被竄改\n（tampering）。\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/bitcoin.png\"\n  alt=\"\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n 區塊的以鍊的形式呈現（參考來源：比特幣白皮書）\u003c/p\u003e\n\u003ch5 id=\"二分散式伺服器網路\"\u003e（二）分散式伺服器網路\u003c/h5\u003e\n\u003cp\u003e比特幣是由一個由分散式伺服器組成的網路（network）運作的，在此我們稱每一個運作單\n位為節點（node）。當新的交易產生的時候，會被廣播（broadcast）到所有其他的節點上\n，而每個節點會將這些新產生所生的區塊上，並使用它的運算能力將新的區塊加入到既有的\n鍊上。每個節點上都會有同樣的這一條鍊，當新的區塊被加入鍊時，會廣播到其他的節點上\n。然而當任何一個節點接受到兩條不同版本的鍊，會同時保留兩條鍊，直到其中一條鍊變得\n更長。對任何一個網路中的節點來說，只有最長的那條鍊會被視為正確的版本。在此情況下\n，即使有多個節點在網路中，仍能保持共識。\u003c/p\u003e\n\u003ch5 id=\"三比特幣的發行及運作機制\"\u003e（三）比特幣的發行及運作機制\u003c/h5\u003e\n\u003cp\u003e前面提到了比特幣分散式伺服器的設計，在為了維持點對點交易的情況下，網路中的節點需\n要使用其運算能力將新的區塊將入鍊中，這個過程被稱作為工作量證明（PoW,\nproof-of-work）。同時需要注意的是，比特幣的發行也是透過工作量證明來完成。要完成\n這個工作量證明，節點須耗費相當的 CPU 運算能力。當這個工作被滿足後，由此產生的新\n區塊將不能再被更改，除非重新運算一次。然而更多新的區塊將會被加入鍊中，因此若任何\n節點意圖更改之前已存在鍊上的區塊，它則需要將此區塊並包含所有連接在它之後的區塊一\n併都重新運算一次。只是，在沒有一個中央機構來控制節點的情況下，要如何讓所有節點互\n相協調運作呢？這就跟比特幣的發行有關了。比特幣的發行是一種激勵機制。這個激勵機制\n是能讓整個比特幣節點網路運作如常的一個很重要的環節。同時，這也是能讓比特幣能穩定\n地被導入到這整個循環的機制。簡言之，當一個工作的節點貢獻了運算能力且完成了工作量\n證明，節點擁有者將會得到比特幣作為獎勵。這個激勵機制還有另一層用意，當系統給予貢\n獻者比特幣，這個獎勵能有效鼓勵所有網路中的節點誠實地按照既定的遊戲規則來運行。\u003c/p\u003e\n\u003ch3 id=\"結語與思考\"\u003e結語與思考\u003c/h3\u003e\n\u003cp\u003e比特幣被廣泛地認為是第一個使用區塊鍊技術（blockchain technology）的實作應用，這\n種應用分類被稱為加密貨幣（crypto-currencies）。從比特幣白皮書中，我們也能發現「\n區塊鍊」（blockchain）這個字並未被直接的使用，但分別提到好幾次「區塊」（block）\n與鍊（chain）。因此推測，在比特幣這個實例成功之後，為了將背後的技術獨立出來避免\n混淆而開始普遍使用區塊鍊這個名稱。簡單地說，比特幣是一種加密貨幣，而加密貨幣是一\n種區塊鍊技術的應用。但是區塊鍊並不等於加密貨幣，當然也不等於比特幣。區塊鍊技術已\n經被廣泛地應用在其他層面，其中許多應用已經不僅僅是加密貨幣而已了。另外你可能也會\n發現，現在的比特幣跟比特幣白皮書相比多了更多特性。原因是因為比特幣也是一個開放且\n不斷創新進步的社群，很多早期被提出來的一些問題，後來都陸續有人提出解決或是強化的\n方法了。因此，這也是為什麼至今比特幣仍被認為是入門區塊鍊技術最應該了解的首選實例\n。\u003c/p\u003e\n\u003ch3 id=\"參考資料\"\u003e參考資料\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e比特幣白皮書原文版（Satoshi Nakamoto, 2008）\u003c/li\u003e\n\u003cli\u003e比特幣白皮書中文翻譯（翻譯者：AndyLin）\u003c/li\u003e\n\u003cli\u003e比特幣白皮書中文翻譯及註解（翻譯者：金曉）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e本篇文章也同時發表在Ｍ edium 上\n：\u003ca href=\"https://medium.com/ethereum-foundation-devcon-scholars/%E6%AF%94%E7%89%B9%E5%B9%A3%E7%99%BD%E7%9A%AE%E6%9B%B8-%E9%80%99%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E9%BA%BC%E5%95%A6-8769df691e7c?source=friends_link\u0026amp;sk=504572478463342757813ac387dff60f\"\u003e文章連結\u003c/a\u003e。\u003c/p\u003e\n",
      "url": "https://pswu.dev/posts/bitcoinwhitepaper/",
      "date_published": "1086-01-09T80:11:00+00:00",
      "date_modified": "1086-01-09T80:11:00+00:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://pswu.dev"
      }
    },
    
    {
      "id": "709c6fad97a99842b346947f124ac11c399d4a12",
      "title": "Devcon V Scholars Program - The Beginning",
      "summary": "",
      "content_text": "I am accepted! In the last two months I have thought of various of topics I could potentially use for my very first article on Medium. Well, I never expected it would be about Devcon5. But hey, this is real. On Jul. 17, 2019, I woke up in my bed seeing an email with the title [Devcon 5], which drew my attention immediately. Long story short, I received a full scholarship for attending Devcon5!\nSo what exactly is it about? The Devcon5 Scholars Program provides a certain amount of scholarships to students or people from the under-represented groups in the current tech community so they could also experience the magic of Devcon5. The scholarships are provided by Ethereum Foundation.\nDevcon5 Scholarships In 2016, I heard about blockchain for the first time while I was working on the Innovation Management project for Postbank. I learned some facts about blockchain and Ethereum smart contracts but due to the lack of ground technical knowledge, I was not able to get deep at that time. Half a year ago, blockchain topic has come into my life again because of my current job (I am business developer at an IT startup) and that I got to know some people who currently work on blockchain projects. Afterwards, I read some articles about Devcon3 \u0026amp; 4, and my established impression that “Devcon is only for developers with strong technical knowledge” has since been changed.\nIn fact, this is how Ethereum Foundation defines Devcon on the event website:\n“Devcon is the Ethereum conference for developers, researchers, thinkers, and makers.”\nEven though I am not a software developer, I am as passionate as others in this community about how blockchain will impact our ways to live, work, and play. Why shouldn’t I be attending too?\nMy dream comes true As much as I want to join, I don’t have the travelling budget for it. Therefore, nothing about Devon5 had been planned for me this year… until I saw this post on Twitter:\nThen you know what happened after that. I was excitedly applying for the scholarships and then was accepted. Essentially, being part of Devcon5 Scholars Program encouraged me to eventually start writing my first article here. In the following months, I will write more articles about my Devcon5 experience and maybe other topics. Now I am finally really close, feeling so excited about meeting enthusiastic participants from all over the world in Osaka at Devcon5. If you are also attending Devcon5 and would like to meet up for some chats, feel free to leave a comment and get in touch! ❤️\nNote: This article is also published on Medium (Link)\n",
      "content_html": "\u003ch3 id=\"i-am-accepted\"\u003eI am accepted!\u003c/h3\u003e\n\u003cp\u003eIn the last two months I have thought of various of topics I could potentially\nuse for my very first article on Medium. Well, I never expected it would be\nabout Devcon5. But hey, this is real. On Jul. 17, 2019, I woke up in my bed\nseeing an email with the title [Devcon 5], which drew my attention immediately.\nLong story short, I received a full scholarship for attending Devcon5!\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/devconscholar1.png\"\n  alt=\"\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003ch3 id=\"so-what-exactly-is-it-about\"\u003eSo what exactly is it about?\u003c/h3\u003e\n\u003cp\u003eThe Devcon5 Scholars Program provides a certain amount of scholarships to\nstudents or people from the under-represented groups in the current tech\ncommunity so they could also experience the magic of Devcon5. The scholarships\nare provided by Ethereum Foundation.\u003c/p\u003e\n\u003ch3 id=\"devcon5-scholarships\"\u003eDevcon5 Scholarships\u003c/h3\u003e\n\u003cp\u003eIn 2016, I heard about blockchain for the first time while I was working on the\nInnovation Management project for Postbank. I learned some facts about\nblockchain and Ethereum smart contracts but due to the lack of ground technical\nknowledge, I was not able to get deep at that time. Half a year ago, blockchain\ntopic has come into my life again because of my current job (I am business\ndeveloper at an IT startup) and that I got to know some people who currently\nwork on blockchain projects. Afterwards, I read some articles about Devcon3 \u0026amp; 4,\nand my established impression that “Devcon is only for developers with strong\ntechnical knowledge” has since been changed.\u003c/p\u003e\n\u003cp\u003eIn fact, this is how Ethereum Foundation defines Devcon on the event website:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“Devcon is the Ethereum conference for developers, researchers, thinkers, and\nmakers.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eEven though I am not a software developer, I am as passionate as others in this\ncommunity about how blockchain will impact our ways to live, work, and play. Why\nshouldn’t I be attending too?\u003c/p\u003e\n\u003ch3 id=\"my-dream-comes-true\"\u003eMy dream comes true\u003c/h3\u003e\n\u003cp\u003eAs much as I want to join, I don’t have the travelling budget for it. Therefore,\nnothing about Devon5 had been planned for me this year… until I saw this post on\nTwitter:\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/images/devconscholar2.png\"\n  alt=\"\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003eThen you know what happened after that. I was excitedly applying for the\nscholarships and then was accepted. Essentially, being part of Devcon5 Scholars\nProgram encouraged me to eventually start writing my first article here. In the\nfollowing months, I will write more articles about my Devcon5 experience and\nmaybe other topics. Now I am finally really close, feeling so excited about\nmeeting enthusiastic participants from all over the world in Osaka at Devcon5.\nIf you are also attending Devcon5 and would like to meet up for some chats, feel\nfree to leave a comment and get in touch! ❤️\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This article is also published on Medium\n\u003ca href=\"https://medium.com/ethereum-foundation-devcon-scholars/ethereum-devcon5-scholars-program-i-am-accepted-a22c475a092a?source=friends_link\u0026amp;sk=5f2e1ea2e507808add90b786b1e8c219\"\u003e(Link)\u003c/a\u003e\u003c/p\u003e\n",
      "url": "https://pswu.dev/posts/devconscholarship/",
      "date_published": "26076-26-09T70:2626:00+00:00",
      "date_modified": "26076-26-09T70:2626:00+00:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://pswu.dev"
      }
    }
    
  ]
}